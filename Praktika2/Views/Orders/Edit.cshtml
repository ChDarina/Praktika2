@model Praktika2.Models.Orders
@using Microsoft.AspNet.Identity
@using Praktika2.Models;

<!DOCTYPE html>
@{
    ViewBag.Title = "Редактировать заказ";
}
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Изменение статуса заказа</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.OrderID)
            @Html.HiddenFor(model => model.IllustratorID)
            @Html.HiddenFor(model => model.CustomerID)
            @Html.HiddenFor(model => model.OrderDate)
            @using (var db = new ApplicationDbContext())
            {
                string id = User.Identity.GetUserId();
                var illustrator = db.Illustrators.Where(c => id == c.UserId);
                bool iru = illustrator.Any();
                if (iru)
                {
                <div class="form-group">
                    @Html.LabelFor(model => model.IllustrationID, "IllustrationID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IllustrationID", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IllustrationID, "", new { @class = "text-danger" })
                    </div>
                </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.IllustrationID)
                }

            <div class="form-group">
                @Html.LabelFor(model => model.Commentary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Commentary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Commentary, "", new { @class = "text-danger" })
                </div>
            </div>
                var customer = db.Customers.Where(c => id == c.UserId);
                //var order = db.Orders.Where(model => model.Customers.UserId == id).ToList();
                if (customer.Any())
                {
                    //if (order[0].OrderStatus == "Готов")
                    //{
            <div class="form-group">
                @Html.LabelFor(model => model.Feedback, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Feedback, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Feedback, "", new { @class = "text-danger" })
                </div>
            </div>
                    @*}
                    else
                    {
                        @Html.HiddenFor(model => model.Feedback)
                    }*@
                }
                else
                {
                    @Html.HiddenFor(model => model.Feedback)
                }
                if (iru)
                {
            <div class="form-group">
                @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OrderStatus", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
                </div>
            </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.OrderStatus)
                }

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Вернуться к списку заказов", "Index")
    </div>
</body>
</html>
